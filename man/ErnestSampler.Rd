% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ErnestSampler.R
\name{ErnestSampler}
\alias{ErnestSampler}
\alias{UniformCube}
\alias{RandomWalkCube}
\title{A likelihood-restricted prior sampler for nested sampling}
\usage{
ErnestSampler(
  log_lik = function() NULL,
  prior_transform = function() NULL,
  n_dim = integer(0),
  n_points = 500L,
  first_update = 300L,
  between_update = 750L,
  verbose = FALSE,
  wrk = NULL
)

UniformCube(
  log_lik = function() NULL,
  prior_transform = function() NULL,
  n_dim = integer(0),
  n_points = 500L,
  first_update = 300L,
  between_update = 750L,
  verbose = FALSE,
  wrk = NULL
)

RandomWalkCube(
  log_lik = function() NULL,
  prior_transform = function() NULL,
  n_dim = integer(0),
  n_points = 500L,
  first_update = 300L,
  between_update = 750L,
  verbose = FALSE,
  wrk = NULL,
  steps = 20L,
  epsilon = 0.1
)
}
\arguments{
\item{log_lik}{A function that returns the log-likelihood of a point in the
parameter space.}

\item{prior_transform}{A function that transforms a unit cube to the prior
space.}

\item{n_dim}{The number of dimensions in the parameter space.}

\item{n_points}{The number of live points to use during the nested sampling
run.}

\item{first_update}{The number of likelihood calls that are performed using
the uniform sampling cube. Defaults to 300L.}

\item{between_update}{The number of iterations to run between updates to the
evidence integral. Defaults to 750L.}

\item{verbose}{Whether to print progress messages to the console. Defaults to
the value of \code{getOption("verbose")}.}

\item{wrk}{Either \code{NULL}, or a reference to the environment where the nested
sampling variables are held.}

\item{steps}{The minimum number of steps to take in the random walk.}

\item{epsilon}{The initial step size of the random walk.}
}
\description{
Likelihood-restricted prior sampling (or LRPS) aims to generate points within
the parameter space defined by the prior. Many options exist for conducting
LRPS, though two currently exist in ernest: uniform sampling and a random
walk. In ernest, LRPS objects contain the necessary information to conduct
sampling, and is assigned to an  R enviroment where the actual nested
sampling algorithm is conducted.
}
\details{
Users should not need to interface with these classes directly, and they are
not exported from ernest. Developers looking to extend ernest can build
samplers that conform to the template set by ErnestSampler, and set the appropriate
methods for the \code{propose_live} and \code{update_sampler} generics.
}
