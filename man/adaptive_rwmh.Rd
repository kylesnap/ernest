% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adaptive_rwmh.R
\name{adaptive_rwmh}
\alias{adaptive_rwmh}
\title{Generate samples with an adaptive random walk}
\usage{
adaptive_rwmh(
  steps = 25,
  target_acceptance = 0.4,
  min_epsilon = 0.1,
  strength = NULL,
  forgetfulness = 0.4
)
}
\arguments{
\item{steps}{Positive integer. A number of steps to take when generating a
proposal point.}

\item{target_acceptance}{A number between \code{1 / steps} and 1.0. Target
acceptance rate for proposed points.}

\item{min_epsilon}{Number equal to or larger than 0. Smallest step-size
possible for the sampler to generate.}

\item{strength}{Positive number controlling the strength of prior
information for covariance matrix estimation. When \code{NULL}, this is
set using the number of live points.}

\item{forgetfulness}{Number between 0 and 1 controlling how quickly past
samples are forgotten when estimating the covariance matrix.}
}
\value{
An object of class \code{c("adaptive_rwmh", "ernest_lrps")} that can be
used with \code{\link[=ernest_sampler]{ernest_sampler()}} to specify the sampling behaviour.
}
\description{
Create new live points by evolving points with a Metropolis-Hastings random
walk. The algorithm simultaneously adapts both the step size and
covariance structure of the proposal distribution to target a
specific acceptance rate.
}
\details{
The adaptive random walk LRPS is a modification of the algorithm offered by
Spencer (2021). Like \link{rwmh_cube}, a random walk with a fixed number of
steps is used to evolve \code{original} to some new point with likelihood greater
than \code{criterion}. Unique to \code{adaptive_rwmh}, each step taken contributes to
the size and shape of the proposal distribution. Theoretically, this allows
the proposals to more readily adapt to local features of the posterior
distribution.

\strong{Shaping}: The covariance matrix is estimated using the accepted
point at each iteration. To stabilise the estimates, the included points
are collected in a sliding window. The forgetting function
\eqn{f(i) = \lfloor \text{forgetfulness} \times i \rfloor} determines when
the window shifts, replacing the contribution of the sample at index
\eqn{f(i-1)} with the sample at index \eqn{f(i)}. Given the
previously-accepted sample \eqn{X_{i-1}}, the covariance matrix estimate
\eqn{\Sigma_i}, and the number of dimensions \eqn{d}, the proposed point is
generated from:

\deqn{N\left(X_{i-1}, \epsilon \cdot \frac{2.38^2}{d} \cdot \Sigma_i\right)}

Calling \link{update_lrps} restimates the covariance matrix of the points with
\code{\link[stats:cor]{stats::cov()}}.

\strong{Scale}: Step-size \eqn{\epsilon} is adapted using a Robbins-Monro
stochastic approximation to achieve the target acceptance rate
\eqn{\alpha_*}. At iteration \eqn{i}, with an actual acceptance rate of
\eqn{\alpha_i} and a scaling parameter \eqn{\delta}, the step size is updated
with

\deqn{\log(\epsilon_i) + \frac{\delta}{i} (\alpha_i - \alpha_*)}

\eqn{\epsilon_i} starts at 1 and is always at least \code{min_epsilon}.
}
\section{Control Parameters}{

\itemize{
\item \code{steps}: Start with 25-50. Increase to generate samples that more closely
follow the posterior distribution; decrease for computational efficiency.
\item \code{target_acceptance}: Start with 0.4-0.6. Smaller values encourage
the sampler to perform more global explorations of the posterior
distribution.
\item \code{min_epsilon}: Start with 0.1. Smaller values allow proposals to wander in
smaller regions of the posterior distribution, but may restrict the
distance between the random walk's start and end points.
\item \code{strength}: Use \code{NULL} or start with 100. Larger values will
promote inter-sample stability of the covariance matrix; smaller values may
be helpful for navigating posterior surfaces with local features.
\item \code{forgetfulness}: Start with 0.2-0.6. Smaller values may be helpful for
quickly adapting to local features of the posterior distribution.
}
}

\examples{
# Basic usage with default parameters
lrps <- adaptive_rwmh()

# Conservative settings for difficult problems
robust_lrps <- adaptive_rwmh(
  steps = 100,
  target_acceptance = 0.5,
  strength = 50,
  forgetfulness = 0.6
)

}
\references{
Spencer, S.E.F. (2021) Accelerating Adaptation in the Adaptive
Metropolisâ€“Hastings Random Walk Algorithm. Aust. N. Z. J. Stat., 63: 468-484.
\url{https://doi.org/10.1111/anzs.12344}
}
\seealso{
Other ernest_lrps: 
\code{\link{rwmh_cube}()},
\code{\link{unif_cube}()},
\code{\link{unif_ellipsoid}()}
}
\concept{ernest_lrps}
