% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_draws.R
\name{as_draws.ernest_run}
\alias{as_draws.ernest_run}
\alias{as_draws_matrix.ernest_run}
\alias{as_draws_rvars.ernest_run}
\title{Transform nested sampling runs to \code{draws} objects}
\usage{
\method{as_draws}{ernest_run}(x, ..., units = c("original", "unit_cube"), radial = FALSE)

\method{as_draws_matrix}{ernest_run}(x, ..., units = c("original", "unit_cube"), radial = FALSE)

\method{as_draws_rvars}{ernest_run}(x, ..., units = c("original", "unit_cube"), radial = FALSE)
}
\arguments{
\item{x}{(ernest_run) An \code{ernest_run} object.}

\item{...}{These dots are for future extensions and must be empty.}

\item{units}{(case-sensitive string) The scale in which to return the
sampled points:
\itemize{
\item \code{"original"}: Points are expressed on the scale of the prior space.
\item \code{"unit_cube"}: Points are expressed on the scale of the (0-1)-unit
hypercube.
}}

\item{radial}{(logical) Whether to return an additional column \code{.radial},
containing the radial coordinate (i.e., the squared sum of squares) for
each sampled point.}
}
\value{
A \link[posterior:draws]{draws} object, containing the posterior samples
from the nested sampling run. Each samples are also bound to their importance
weight (in log. units).

The exact type of the returned object depends on the function used:
\itemize{
\item For \code{as_draws} and \code{as_draws_matrix}, a \code{\link[posterior:draws_matrix]{posterior::draws_matrix()}}
object, which has classes \code{c("draws_matrix", "draws", "matrix")}.
\item For \code{as_draws_rvars}, a \code{\link[posterior:draws_rvars]{posterior::draws_rvars()}} object, which has
classes \code{c("draws_rvars", "draws", "list")}.
}
}
\description{
Try to transform an \linkS4class{ernest_run} to a format supported by the
\link[posterior:posterior-package]{posterior} package.
}
\examples{
# Load example run
library(posterior)
data(ernest_run_example)

# View importance weights
dm <- as_draws(ernest_run_example)
weights(dm) |> head()

# Summarize points after resampling
dm |>
 resample_draws() |>
 summarize_draws()

# View the radial coordinate in the unit-space over the run
dm_rad <- as_draws_rvars(ernest_run_example, units = "unit_cube", radial = TRUE)
plot(
  x = ernest_run_example$log_volume,
  y = draws_of(dm_rad$.radial),
  xlab = "Log volume",
  ylab = "Radial coordinate"
)
}
