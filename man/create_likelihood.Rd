% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood-class.R
\name{create_likelihood}
\alias{create_likelihood}
\title{Prepare a likelihood function for nested sampling}
\usage{
create_likelihood(fn, ...)
}
\arguments{
\item{fn}{A function or an object of class \code{ernest_likelihood}. If a function,
it should take a single numeric vector of parameters and
return either a finite log likelihood value or \code{-Inf}.}

\item{...}{These dots are for future extensions and must be empty.}
}
\value{
A function with additional class \code{ernest_likelihood}. On a success, this function
is guaranteed to return a finite value or \code{-Inf}. Non-finite, non-\code{-Inf} values
are coerced to \code{-Inf} with a warning. Non-numeric returns are reported as errors.
}
\description{
Creates a modified version of a log. likelihood function that always returns
either a finite value or \code{-Inf} for each vector of parameters that is provided.
}
\examples{
# A 3D Gaussian likelihood function
n_dim <- 3
sigma <- diag(0.95, nrow = 3)
det_sigma <- determinant(sigma, logarithm = TRUE)$modulus
attributes(det_sigma) <- NULL
prec <- solve(sigma)
log_norm <- -0.5 * (log(2 * pi) * n_dim + det_sigma)

log_lik <- function(theta) {
  drop(-0.5 * crossprod(theta, crossprod(prec, theta)) + log_norm)
}
log_lik(c(0, 0, 0))

# ernest catches and warns the user about non-finite, non-`-Inf` values
try(log_lik(c(Inf, 0, 0)))

# ernest will quit when receiving unexpected values from the likelihood function
log_lik_2 <- function(theta) {
 if (theta[1] < 1) "Odd value." else log_lik(theta)
}
log_lik_2(c(1, 0, 0))
try(log_lik_2(c(0, 0, 0)))
}
