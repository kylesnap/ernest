% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood-class.R
\name{create_likelihood}
\alias{create_likelihood}
\alias{ernest_likelihood}
\title{Prepare a likelihood function for nested sampling}
\usage{
create_likelihood(
  fn,
  rowwise_fn,
  ...,
  .nonfinite_action = c("warn", "quiet", "abort")
)
}
\arguments{
\item{fn, rowwise_fn}{(function) Pick one of \code{fn} or \code{rowwise_fn}:
\itemize{
\item \code{fn}: A function that takes in vectors of parameters and returns a scalar
likelihood value (either a finite double or \code{-Inf}).
\item \code{rowwise_fn}: A function that takes in a matrix of parameters and returns
a vector of likelihood values (which are all finite doubles or \code{-Inf}).
}}

\item{...}{Named arguments to \code{fn} or \code{rowwise_fn} that should be partially
applied (see \code{\link[purrr:partial]{purrr::partial()}}).}

\item{.nonfinite_action}{(case-sensitive string) Action to perform when \code{fn}
passes a value that is nonfinite and non-\code{-Inf} (e.g, \code{NaN}, \code{NA}, or \code{Inf}).
\itemize{
\item \code{"warn"}: Issue a warning and replace values with \code{-Inf}.
\item \code{"quiet"}: Silently replace values with \code{-Inf}.
\item \code{"abort"}: Stop execution and signal an error.
}}
}
\value{
A function with additional class \code{ernest_likelihood}. This function is
wrapped in checks that promote type- and size-stability:
\itemize{
\item If provided a vector of doubles, the function will return
a scalar double, \code{-Inf}, or an error.
\item If provided a matrix of doubles, the function will return
a vector of doubles and \code{-Inf} equal to the number of matrix rows,
or an error.
\item If provided anything else, the function will throw an error.
}
}
\description{
Creates a modified version of a log. likelihood function that always returns
either a finite value or \code{-Inf} for each vector of parameters that is
provided.
}
\details{
Model likelihoods should be provided as a log density function. The first
argument of \code{fn} or \code{rowwise_fn} should be a vector or matrix of parameters,
respectively. Other arguments can be forwarded by providing named arguments
to \code{...} or through anonymous functions (see Examples).

It is expected that \code{fn} returns a scalar finite doubles or \code{-Inf} for each
parameter vector.

Ernest will wrap \code{fn} so that it may take in a matrix of parameters. Should
you have a more efficient implementation of your likelihood function that
can handle vectors and matrices, then consider providing \code{rowwise_fn}
instead.
}
\examples{
# A 3D Gaussian likelihood function
n_dim <- 3
sigma <- diag(0.95, nrow = 3)
det_sigma <- determinant(sigma, logarithm = TRUE)$modulus
attributes(det_sigma) <- NULL
prec <- solve(sigma)
log_norm <- -0.5 * (log(2 * pi) * n_dim + det_sigma)

fn <- function(theta) {
  drop(-0.5 * crossprod(theta, crossprod(prec, theta)) + log_norm)
}
log_lik <- create_likelihood(fn)
log_lik(c(0, 0, 0))

# As default, `log_lik` will loudly replace non-finite, non-`-Inf` values.
try(log_lik(c(Inf, 0, 0)))

# Silence warnings with `nonfinite_action = "pass"`
quiet_lik <- create_likelihood(log_lik, nonfinite_action = "pass")
quiet_lik(c(Inf, 0, 0))
}
