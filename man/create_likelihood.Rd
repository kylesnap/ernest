% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood-class.R
\name{create_likelihood}
\alias{create_likelihood}
\alias{ernest_likelihood}
\title{Prepare a likelihood function for nested sampling}
\usage{
create_likelihood(
  fn,
  rowwise_fn,
  ...,
  .nonfinite_action = c("warn", "quiet", "abort")
)
}
\arguments{
\item{fn, rowwise_fn}{Choose one of \code{fn} or \code{rowwise_fn}:
\itemize{
\item \code{fn}: A function that takes a vector of parameters and returns a scalar
likelihood value (either a finite double or \code{-Inf}).
\item \code{rowwise_fn}: A function that takes a matrix of parameters and returns
a vector of likelihood values (all finite doubles or \code{-Inf}).
}}

\item{...}{Named arguments to \code{fn} or \code{rowwise_fn} that should be partially
applied.}

\item{.nonfinite_action}{(case-sensitive string) Action to perform when \code{fn}
returns a value that is non-finite and not \code{-Inf} (e.g., \code{NaN}, \code{NA}, \code{Inf}):
\itemize{
\item \code{"warn"}: Issue a warning and replace values with \code{-Inf}.
\item \code{"quiet"}: Silently replace values with \code{-Inf}.
\item \code{"abort"}: Stop execution and signal an error.
}}
}
\value{
A function with class \code{ernest_likelihood}. This function is
wrapped in checks to ensure type and size stability:
\itemize{
\item If provided a vector of doubles, returns a scalar double, \code{-Inf}, or an
error.
\item If provided a matrix of doubles, returns a vector of doubles and \code{-Inf}
of length equal to the number of matrix rows, or an error.
\item Otherwise, throws an error.
}
}
\description{
Creates a modified version of a log-likelihood function that always returns
either a finite value or \code{-Inf} for each vector of parameters provided.
}
\details{
Model likelihoods should be provided as a log-density function. The first
argument of \code{fn} or \code{rowwise_fn} should be a vector or matrix of parameters,
respectively.

If the model likelihood is conditional on some data, then incorporate this
data into the likelihood function here. You can either build an anonymous
function (see \code{\link[rlang:as_function]{rlang::as_function()}}), or use the \code{...} parameters to
partially apply data to \code{fn} or \code{rowwise_fn} (see \code{\link[purrr:partial]{purrr::partial()}}).

It is expected that \code{fn} returns a scalar finite double or \code{-Inf} for each
parameter vector.

Ernest will wrap \code{fn} so it can accept a matrix of parameters. If you have
a more efficient implementation of your likelihood function that can handle
vectors and matrices, consider providing \code{rowwise_fn} instead.
}
\examples{
# A 3D Gaussian likelihood function
n_dim <- 3
sigma <- diag(0.95, nrow = 3)
det_sigma <- determinant(sigma, logarithm = TRUE)$modulus
attributes(det_sigma) <- NULL
prec <- solve(sigma)
log_norm <- -0.5 * (log(2 * pi) * n_dim + det_sigma)

fn <- function(theta) {
  drop(-0.5 * crossprod(theta, crossprod(prec, theta)) + log_norm)
}
log_lik <- create_likelihood(fn)
log_lik(c(0, 0, 0))

# Bind data to the likelihood function using dots or anonymous functions.
y <- 100000000 * runif(11, min = 0.1, max = 0.3)
log_lik <- function(theta, y) {
  if (theta[2] <= 0) {
    return(-Inf)
  }
  sum(dnorm(y, mean = theta[1], sd = theta[2], log = TRUE))
}
create_likelihood(log_lik, y = !!y)
create_likelihood(\(theta) log_lik(theta, y))
}
