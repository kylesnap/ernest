% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood-class.R
\name{create_likelihood}
\alias{create_likelihood}
\alias{ernest_likelihood}
\title{Prepare a likelihood function for nested sampling}
\usage{
create_likelihood(
  fn,
  rowwise_fn = deprecated(),
  ...,
  .nonfinite_action = c("warn", "quiet", "abort")
)
}
\arguments{
\item{fn}{A function that takes a vector of parameters and returns a
scalar log-likelihood value (either a finite double or \code{-Inf}).}

\item{rowwise_fn}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} No longer supported;
instead, use \code{fn} to provide a log-likelihood function.}

\item{...}{Named arguments to be partially applied to \code{fn}.}

\item{.nonfinite_action}{A case-sensitive string. Action to perform when \code{fn}
returns a value that is non-finite and not \code{-Inf} (i.e., \code{NaN}, \code{NA}, \code{Inf}):
\itemize{
\item \code{"warn"}: Issue a warning and return \code{-Inf}.
\item \code{"quiet"}: Silently return \code{-Inf}.
\item \code{"abort"}: Stop execution and signal an error.
}}
}
\value{
A function with class \code{ernest_likelihood}. When provided a parameter vector
this function will always return either a scalar finite double, the value
\code{-Inf}, or an error message.
}
\description{
Creates a modified version of a log-likelihood function that always returns
either a finite value or \code{-Inf} for each vector of parameters provided.
}
\details{
Model likelihoods should be provided as a log-density function. The first
argument of \code{fn} should be a vector of free parameters.

If the model likelihood is conditional on some data, then incorporate this
data into the likelihood function here. You can either build an anonymous
function (see \code{\link[rlang:as_function]{rlang::as_function()}}), or use the \code{...} parameters to
partially apply data to \code{fn} (see \code{\link[purrr:partial]{purrr::partial()}}).

It is expected that the log-likelihood function returns a scalar finite
double or \code{-Inf} for each parameter vector. Non-finite values other than
\code{-Inf}, such as \code{NaN}, \code{Inf}, or \code{NA} (i.e. missing values) are handled
with the behavior of \code{.nonfinite_action}.
}
\examples{
# A 3D Gaussian likelihood function
n_dim <- 3
sigma <- diag(0.95, nrow = 3)
det_sigma <- determinant(sigma, logarithm = TRUE)$modulus
attributes(det_sigma) <- NULL
prec <- solve(sigma)
log_norm <- -0.5 * (log(2 * pi) * n_dim + det_sigma)

fn <- function(theta) {
  drop(-0.5 * crossprod(theta, crossprod(prec, theta)) + log_norm)
}
log_lik <- create_likelihood(fn)
log_lik(c(0, 0, 0))

# Bind data to the likelihood function using dots or anonymous functions.
y <- 100000000 * runif(11, min = 0.1, max = 0.3)
log_lik <- function(theta, y) {
  if (theta[2] <= 0) {
    return(-Inf)
  }
  sum(dnorm(y, mean = theta[1], sd = theta[2], log = TRUE))
}
create_likelihood(log_lik, y = !!y)
create_likelihood(\(theta) log_lik(theta, y))
}
