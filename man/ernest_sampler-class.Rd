% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampler-class.R
\name{ernest_sampler}
\alias{ernest_sampler}
\title{Internal: The Ernest Nested Sampler R6 Class}
\description{
The \code{ernest_sampler} is an R6 class that implements the core logic for a
nested sampling run.
}
\details{
This class is primarily intended for internal use within the \code{ernest}
package. Users should interact with nested sampling samplers via the
provided S3 generics rather than calling R6 methods directly.

The object is documented for developers and advanced users who want to
extend or debug ernest.
}
\section{Usage}{


Users are not able to instantiate this class, as it is not exported.
Instead, they use the following functions:
\itemize{
\item To create a new sampler, use \code{\link[=nested_sampling]{nested_sampling()}}.
\item To compile live points, use \code{\link[=compile]{compile()}}.
\item To run nested sampling, use \code{\link[=generate]{generate()}}.
\item To access the latest results, use the \verb{$run} active binding.
}
}

\keyword{internal}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{niterations}}{The total number of sampling iterations.}

\item{\code{ncalls}}{The total calls made to the likelihood function.}

\item{\code{live_points}}{A list, containing \code{unit}, the current matrix of live
points in the hypercube scale, and \code{log_lik} containing the corresponding
log likelihood values.}

\item{\code{run}}{The \code{ernest_run} object binding the results of the previous
sampling runs, or \code{NULL} if no results exist.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ernest_sampler-new}{\code{ernest_sampler$new()}}
\item \href{#method-ernest_sampler-clear}{\code{ernest_sampler$clear()}}
\item \href{#method-ernest_sampler-compile}{\code{ernest_sampler$compile()}}
\item \href{#method-ernest_sampler-generate}{\code{ernest_sampler$generate()}}
\item \href{#method-ernest_sampler-print}{\code{ernest_sampler$print()}}
\item \href{#method-ernest_sampler-clone}{\code{ernest_sampler$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ernest_sampler-new"></a>}}
\if{latex}{\out{\hypertarget{method-ernest_sampler-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{ernest_sampler}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ernest_sampler$new(
  log_lik_fn,
  prior,
  sampling,
  n_points,
  first_update,
  update_interval
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{log_lik_fn, prior, sampling, n_points, first_update, update_interval}}{See \code{\link[=nested_sampling]{nested_sampling()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The sampler, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ernest_sampler-clear"></a>}}
\if{latex}{\out{\hypertarget{method-ernest_sampler-clear}{}}}
\subsection{Method \code{clear()}}{
Clears the previous runs from the sampler, including the sampler's
live points.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ernest_sampler$clear()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Itself, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ernest_sampler-compile"></a>}}
\if{latex}{\out{\hypertarget{method-ernest_sampler-compile}{}}}
\subsection{Method \code{compile()}}{
Generates a sample of live points from the prior and validates them.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ernest_sampler$compile(seed = NA, clear = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seed, clear}}{See \code{\link[=compile.ernest_sampler]{compile.ernest_sampler()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Itself, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ernest_sampler-generate"></a>}}
\if{latex}{\out{\hypertarget{method-ernest_sampler-generate}{}}}
\subsection{Method \code{generate()}}{
Performs nested sampling until a stopping criterion is met.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ernest_sampler$generate(
  max_iterations = Inf,
  max_calls = Inf,
  min_logz = 0.05,
  seed = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{max_iterations, max_calls, min_logz, seed}}{See
\code{\link[=generate.ernest_sampler]{generate.ernest_sampler()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Itself, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ernest_sampler-print"></a>}}
\if{latex}{\out{\hypertarget{method-ernest_sampler-print}{}}}
\subsection{Method \code{print()}}{
Prints a brief description of the sampler.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ernest_sampler$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Ignored.volume}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Itself, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ernest_sampler-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ernest_sampler-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ernest_sampler$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
