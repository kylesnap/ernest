% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ernest_sampler.R
\name{ernest_sampler}
\alias{ernest_sampler}
\title{Prepare a new nested sampling run}
\usage{
ernest_sampler(
  log_lik,
  prior,
  sampler = rwmh_cube(),
  n_points = 500,
  first_update = NULL,
  update_interval = NULL
)
}
\arguments{
\item{log_lik}{A function which takes a vector of parameters as a vector and
returns the log-likelihood of a given model. Wrapped using
\code{\link[=create_likelihood]{create_likelihood()}} unless it is already of class \code{ernest_likelihood}.}

\item{prior}{An object with class \link{ernest_prior}. Describes the prior space
within which to generate sample parameters for \code{log_lik}.}

\item{sampler}{An object of class \link{ernest_lrps}. Describes the
likelihood-restricted prior sampling technique to adopt during the run.}

\item{n_points}{A strictly positive integer. The number of live points to use
in the nested sampling run.}

\item{first_update}{An optional positive integer. The number of likelihood
calls to make with the default \link[=unif_cube]{uniform LRPS} method before
swapping to the technique described by \code{sampler}. If left \code{NULL},
this is set to \code{n_points * 2.5}.}

\item{update_interval}{An optional positive integer. The number of likelihood
calls between updates to the \code{sampler} object. If \code{NULL}, this is set to
\code{n_points * 1.5}.}
}
\value{
An object of class \code{ernest_sampler}, which is a list containing the
inputs used as arguments to this function, along with an environment
\code{live_points} which is used to store the \code{n_points} live particles throughout
a nested sampling run.
}
\description{
Initializes an \code{ernest_sampler} object containing the components required to
perform nested sampling. This object can then be used to build sequences of
nested samples with \code{\link[=generate]{generate()}}.
}
\details{
The \code{ernest_sampler} object is tested with \code{\link[=compile]{compile()}} before it is
returned. This helps to catch errors with the likelihood and prior
specifications. If this compilation step fails, review your \code{log_lik_fn} and
\code{prior} objects for their compliance.
\subsection{Verbosity}{

Messages from ernest can be silenced with the global options
\code{rlib_message_verbosity} and \code{rlib_warning_verbosity}. These options take the
values:
\itemize{
\item "default": Verbose unless the \code{.frequency} argument is supplied.
\item "verbose": Always verbose.
\item "quiet": Always quiet.
}

When set to quiet, message are not displayed and the condition is not
signaled. See \code{\link[rlang:abort]{rlang::abort()}} for more information.
}
}
\examples{
prior <- create_uniform_prior(n_dim = 2, lower = -1, upper = 1)
ll_fn <- function(x) -sum(x^2)
sampler <- ernest_sampler(ll_fn, prior, n_points = 100)
sampler

# Use a unit-cube LRPS (not recommended in practice)
unit_sampler <- ernest_sampler(
  ll_fn,
  prior,
  n_points = 100,
  sampler = unif_cube
)
unit_sampler
}
\seealso{
\itemize{
\item \code{\link[=create_likelihood]{create_likelihood()}} describes the requirements of the \code{log_lik_fn}
parameter.
\item \code{\link[=create_prior]{create_prior()}} describes the requriements of the \code{prior} parameter.
\item \link{ernest_lrps} describes the general requirements of likelihood-restricted
\item prior samplers.
}
}
