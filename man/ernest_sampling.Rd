% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ernest_sampling.R
\name{ernest_sampling}
\alias{ernest_sampling}
\alias{unif_cube}
\alias{rwmh_cube}
\title{Likelihood-Restricted Prior Samplers (LRPS)}
\usage{
unif_cube()

rwmh_cube(steps = 25L, target_acceptance = 0.5)
}
\arguments{
\item{steps}{Number of steps to take when generating a proposal point.}

\item{target_acceptance}{Step-size parameter, adjusted over the course of a run.}
}
\description{
Set up a nested sampling run by specifying a likelihood-
restricted prior sampling method.

\code{unif_cube()} is a region-based sampler, where points are generated by
sampling uniformly within the unit hypercube, returning a point when
a sampled point exceeds  from the prior under a likelihood constraint is to
sample randomly from the prior and reject the point if the likelihood
constraint is not fulfilled. This method is horribly inefficient in even
moderately-large dimensions, but is useful for testing and debugging.

\code{rwmh_cube} is a MCMC-based sampler, where points are generated by
taking random steps within the unit hypercube. The step size is evolve over
a walk to target an acceptance rate of \code{0.5}.
}
\details{
Nested sampling relies on generating independent live points from a
prior space that all satisfy some minimum likelihood value or restriction.
There are many ways to perform this likelihood restricted prior sampling,
but ernest currently offers two foundational examples: A simple region-based
sampler in \code{uniform_cube}, and a local-step algorithm in \code{rwmh_cube}.
}
