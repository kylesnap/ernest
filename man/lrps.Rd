% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lrps.R
\name{lrps}
\alias{lrps}
\alias{unif_cube}
\alias{rwmh_cube}
\title{Likelihood-Restricted Prior Samplers (LRPS)}
\usage{
unif_cube(max_loop = NULL)

rwmh_cube(epsilon = 0.1, steps = 20L, max_loop = NULL)
}
\arguments{
\item{max_loop}{The maximum number of calls to the likelihood function a
sampler will make when trying to propose a new point given one likelihood
constraint. Once exceeded, ernest will abort and report an error to the user.
If non-null, this overwrites the \code{ernest.max_loop} global option
(default \code{1e6L}).}

\item{epsilon}{step-size hyperparameter, defaults to \code{0.1}.}

\item{steps}{minimum number of steps to take, defaults to \code{20}.}
}
\value{
an \code{ErnestLRPS} object that can be passed to \code{\link[=nested_sampling]{nested_sampling()}}
}
\description{
Set up a nested sampling run by specifying a likelihood-
restricted prior sampling method.

\code{uniform_cube()} is a region-based sampler, where points are generated by
sampling uniformly within the unit hypercube, returning a point when
a sampled point exceeds  from the prior under a likelihood constraint is to
sample randomly from the prior and reject the point if the likelihood
constraint is not fulfilled. This method is horribly inefficient in even
moderately-large dimensions, but is useful for testing and debugging.

\code{rwmh_cube} is a region-based sampler, where points are generated by
taking random steps within the unit hypercube. The step size is evolve over
a walk to target an acceptance rate of \code{0.5}.
}
\details{
Nested sampling relies on generating independent live points from a
prior space that all satisfy some minimum likelihood value or restriction.
There are many ways to perform this likelihood restricted prior sampling,
but ernest currently offers two foundational examples: A simple region-based
sampler in \code{uniform_cube}, and a local-step algorithm in \code{rwmh_cube}.
}
