% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lrps-class.R, R/rwmh_cube.R, R/unif_cube.R,
%   R/unif_ellipsoid.R
\name{propose}
\alias{propose}
\alias{propose.rwmh_cube}
\alias{propose.unif_cube}
\alias{propose.unif_ellipsoid}
\title{Generate a new point using LRPS}
\usage{
propose(x, original = NULL, criterion = -Inf, idx = NULL)

\method{propose}{rwmh_cube}(x, original = NULL, criterion = -Inf, idx = NULL)

\method{propose}{unif_cube}(x, original = NULL, criterion = -Inf, idx = NULL)

\method{propose}{unif_ellipsoid}(x, original = NULL, criterion = -Inf, idx = NULL)
}
\arguments{
\item{x}{An \code{ernest_lrps} object.}

\item{original}{Optional double vector. Points in the prior space used to
start the proposal process. If \code{NULL}, a new point is generated by
sampling from the unconstrained unit cube (see \code{\link[=unif_cube]{unif_cube()}}).}

\item{criterion}{Double scalar. A log-likelihood value that proposed points
must satisfy.}

\item{idx}{Optional positive integer. The index of the original point in the
live set. Must be provided if original is provided.}
}
\value{
A list with:
\itemize{
\item \code{unit}: Matrix of proposed points in the prior space.
\item \code{log_lik}: Numeric vector of log-likelihood values for the proposed
points.
\item \code{n_call}: Number of calls made to \code{unit_log_fn} during the proposal.
}
}
\description{
Developer-facing function, used when creating your own \link{ernest_lrps}
subclass.

When specifying your subclass, you must implement this method to define how
your sampler generates new points that satisfy the likelihood constraint.
}
\keyword{internal}
