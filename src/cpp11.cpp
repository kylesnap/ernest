// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// RandomWalkMetropolis.cpp
cpp11::list RandomWalkMetropolis(const cpp11::doubles_matrix<> unit, const cpp11::doubles criteria, cpp11::function unit_log_lik, const int num_dim, const int steps, const double epsilon);
extern "C" SEXP _ernest_RandomWalkMetropolis(SEXP unit, SEXP criteria, SEXP unit_log_lik, SEXP num_dim, SEXP steps, SEXP epsilon) {
  BEGIN_CPP11
    return cpp11::as_sexp(RandomWalkMetropolis(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles_matrix<>>>(unit), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles>>(criteria), cpp11::as_cpp<cpp11::decay_t<cpp11::function>>(unit_log_lik), cpp11::as_cpp<cpp11::decay_t<const int>>(num_dim), cpp11::as_cpp<cpp11::decay_t<const int>>(steps), cpp11::as_cpp<cpp11::decay_t<const double>>(epsilon)));
  END_CPP11
}
// UniformCube.cpp
cpp11::list UniformCube(const cpp11::doubles criteria, cpp11::function unit_log_lik, const int num_dim, const int max_loop);
extern "C" SEXP _ernest_UniformCube(SEXP criteria, SEXP unit_log_lik, SEXP num_dim, SEXP max_loop) {
  BEGIN_CPP11
    return cpp11::as_sexp(UniformCube(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles>>(criteria), cpp11::as_cpp<cpp11::decay_t<cpp11::function>>(unit_log_lik), cpp11::as_cpp<cpp11::decay_t<const int>>(num_dim), cpp11::as_cpp<cpp11::decay_t<const int>>(max_loop)));
  END_CPP11
}
// utils.cpp
double logaddexp(double x, double y);
extern "C" SEXP _ernest_logaddexp(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(logaddexp(cpp11::as_cpp<cpp11::decay_t<double>>(x), cpp11::as_cpp<cpp11::decay_t<double>>(y)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_ernest_RandomWalkMetropolis", (DL_FUNC) &_ernest_RandomWalkMetropolis, 6},
    {"_ernest_UniformCube",          (DL_FUNC) &_ernest_UniformCube,          4},
    {"_ernest_logaddexp",            (DL_FUNC) &_ernest_logaddexp,            2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_ernest(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
