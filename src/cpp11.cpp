// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// random_walks.cpp
cpp11::list rwmh(cpp11::doubles original, cpp11::function log_lik_fn, double criterion, int steps, double epsilon, cpp11::doubles_matrix<> chol_cov);
extern "C" SEXP _ernest_rwmh(SEXP original, SEXP log_lik_fn, SEXP criterion, SEXP steps, SEXP epsilon, SEXP chol_cov) {
  BEGIN_CPP11
    return cpp11::as_sexp(rwmh(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(original), cpp11::as_cpp<cpp11::decay_t<cpp11::function>>(log_lik_fn), cpp11::as_cpp<cpp11::decay_t<double>>(criterion), cpp11::as_cpp<cpp11::decay_t<int>>(steps), cpp11::as_cpp<cpp11::decay_t<double>>(epsilon), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles_matrix<>>>(chol_cov)));
  END_CPP11
}
// utils.cpp
double logaddexp(double x, double y);
extern "C" SEXP _ernest_logaddexp(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(logaddexp(cpp11::as_cpp<cpp11::decay_t<double>>(x), cpp11::as_cpp<cpp11::decay_t<double>>(y)));
  END_CPP11
}
// utils.cpp
cpp11::doubles logcumsumexp(cpp11::doubles x);
extern "C" SEXP _ernest_logcumsumexp(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(logcumsumexp(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x)));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP run_testthat_tests(void *);

static const R_CallMethodDef CallEntries[] = {
    {"_ernest_logaddexp",    (DL_FUNC) &_ernest_logaddexp,    2},
    {"_ernest_logcumsumexp", (DL_FUNC) &_ernest_logcumsumexp, 1},
    {"_ernest_rwmh",         (DL_FUNC) &_ernest_rwmh,         6},
    {"run_testthat_tests",   (DL_FUNC) &run_testthat_tests,   1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_ernest(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
